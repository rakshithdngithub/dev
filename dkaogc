export REPO=
export DOCKER_IMAGE=
export TAG=
export ZONE=

gcloud auth list

gsutil cat gs://cloud-training/gsp318/marking/setup_marking_v2.sh | bash

//put project id
gcloud config set project *

gcloud source repos clone valkyrie-app

cd valkyrie-app

cat > Dockerfile <<EOF
FROM golang:1.10
WORKDIR /go/src/app
COPY source .
RUN go install -v
ENTRYPOINT ["app","-single=true","-port=8080"]
EOF

docker build -t $DOCKER_IMAGE:$TAG .

cd ..
cd marking
./step1_v2.sh

cd ..
cd valkyrie-app

docker run -p 8080:8080 $DOCKER_IMAGE:$TAG &

//press enter and web preview &port 8080

cd ..
cd marking
./step2_v2.sh
bash ~/marking/step2_v2.sh

cd ..
cd valkyrie-app

export REGION=

gcloud artifacts repositories create $REPO \
    --repository-format=docker \
    --location=$REGION \
    --description="awesome lab" \
    --async 

gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

Image_ID=$(docker images --format='{{.ID}}')

docker tag $Image_ID $REGION-docker.pkg.dev/$DEVSHELL_PROJECT_ID/$REPO/$DOCKER_IMAGE:$TAG

docker push $REGION-docker.pkg.dev/$DEVSHELL_PROJECT_ID/$REPO/$DOCKER_IMAGE:$TAG

sed -i s#IMAGE_HERE#$REGION-docker.pkg.dev/$DEVSHELL_PROJECT_ID/$REPO/$DOCKER_IMAGE:$TAG#g k8s/deployment.yaml

gcloud container clusters get-credentials valkyrie-dev --zone $ZONE

kubectl create -f k8s/deployment.yaml

kubectl create -f k8s/service.yaml

kubectl get services
//copy external ip and paste in new tab
